int maxCoins(int* nums, int numsSize) {
    int n = numsSize + 2;
    int* newNums = (int*)malloc(n * sizeof(int));
    newNums[0] = 1;
    newNums[n - 1] = 1;
    for (int i = 0; i < numsSize; i++) {
        newNums[i + 1] = nums[i];
    }

    int** dp = (int**)malloc(n * sizeof(int*));
    for (int i = 0; i < n; i++) {
        dp[i] = (int*)malloc(n * sizeof(int));
        memset(dp[i], 0, n * sizeof(int));
    }

    for (int len = 1; len <= numsSize; len++) {
        for (int left = 1; left <= numsSize - len + 1; left++) {
            int right = left + len - 1;
            for (int k = left; k <= right; k++) {
                dp[left][right] = fmax(dp[left][right],
                    newNums[left - 1] * newNums[k] * newNums[right + 1] +
                    dp[left][k - 1] + dp[k + 1][right]);
            }
        }
    }

    int result = dp[1][numsSize];

    for (int i = 0; i < n; i++) {
        free(dp[i]);
    }
    free(dp);
    free(newNums);

    return result;
}

