int max(int a, int b) {
    return (a > b) ? a : b;
}

int maxProfit(int k, int* prices, int pricesSize) {
    if (pricesSize <= 1) {
        return 0;
    }
    
    if (k >= pricesSize / 2) {
        int maxProfit = 0;
        for (int i = 1; i < pricesSize; ++i) {
            if (prices[i] > prices[i - 1]) {
                maxProfit += prices[i] - prices[i - 1];
            }
        }
        return maxProfit;
    }
    
    int hold[k + 1];
    int sold[k + 1];
    
    for (int j = 0; j <= k; ++j) {
        hold[j] = INT_MIN;
        sold[j] = 0;
    }
    
    for (int i = 0; i < pricesSize; ++i) {
        for (int j = k; j > 0; --j) {
            sold[j] = max(sold[j], hold[j] + prices[i]);
            hold[j] = max(hold[j], sold[j - 1] - prices[i]);
        }
    }
    
    return sold[k];
}
